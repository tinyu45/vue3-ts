<template>
  <div ref="container" class="three-container">
    <a-row class="info-pack">
      <a-col :span="12">
        <a-typography-title :level="3" style="color: white">
          一个地球 🌏
        </a-typography-title>
      </a-col>
      <a-col :span="12" class="back-container">
        <a-button type="primary" @click="jump('/')">back</a-button>
      </a-col>
    </a-row>
  </div>
</template>
<script lang="ts">
import { defineComponent, onMounted, ref, unref, onBeforeUnmount } from "vue";
import { useCommon } from "@/utils/common";
import { SmileOutlined, DownOutlined } from "@ant-design/icons-vue";
import * as THREE from "three";
import { OBJLoader } from "three/examples/jsm/loaders/OBJLoader"; // obj文件加载
import { MTLLoader } from "three/examples/jsm/loaders/MTLLoader"; // 材质加载
export default defineComponent({
  setup() {
    const container = ref(null);
    const { jumpTo: jump } = useCommon();
    let renderer: any, scene: any, camera: any, light: any, ball: any;

    /**
     * 自动循环渲染
     */
    function render() {
      // ball.rotation.y = (ball.rotation.y + 0.01) % (Math.PI * 2);
      renderer.render(scene, camera);
      requestAnimationFrame(render);
    }
    /**
     * 初始化方法
     */
    function init() {
      renderer = new THREE.WebGLRenderer(); // 渲染器
      renderer.setSize(window.innerWidth, window.innerHeight);
      const contant: any = unref(container);
      contant.appendChild(renderer.domElement);

      renderer.setClearColor(0x000000); // 设置背景色
      scene = new THREE.Scene(); // 创建场景
      // 创建相机 并设置位置
      camera = new THREE.PerspectiveCamera(
        45,
        window.innerWidth / window.innerHeight,
        1,
        1000
      );
      camera.position.set(0, 0, 5);
      scene.add(camera);

      // 创建一个 x、y、z方向为 1、2、3,颜色为 红色 的矩形
      //   var cube = new THREE.Mesh(
      //     new THREE.BoxGeometry(1, 2, 3, 20, 20, 30),
      //     new THREE.MeshBasicMaterial({
      //       color: 0xcccccc,
      //       wireframe: true // 这里这句，要加
      //     })
      //   );
      //   scene.add(cube);

      // 添加球体 ,  红色   这里的三个参数是(半径、经度上的切片数，纬度上的切片数)。经纬度数据越大圆越是精细(共7个参数)
      //   var loader = new THREE.TextureLoader();
      //   loader.load("/img/map.jpg", (texture: any) => {
      //     console.log(texture);
      //   });

      ball = new THREE.Mesh(
        new THREE.SphereGeometry(3, 20, 30),
        new THREE.MeshBasicMaterial({
          map: new THREE.TextureLoader().load("/img/map.jpg")
        })
      );
      // 切图渲染
      // new THREE.MeshBasicMaterial({
      //   color: 0xff0000,
      //   wireframe: true
      // })
      // scene.add(ball);

      // camera.position.set(0, 0, 5);
      //   camera.position.set(-2, -4, 5);
      //   camera.lookAt(new THREE.Vector3(0, 0, 0));

      camera.position.set(0, 0, 10);

      render();
    }

    function clear() {
      renderer = null;
      camera = null;
      scene = null;
      ball = null;
    }

    onMounted(() => {
      init();
    });

    /**
     * 清除内存占用
     */
    onBeforeUnmount(() => {
      clear();
    });

    return {
      container,
      jump
    };
  }
});
</script>
<style lang="less" scoped>
.three-container {
  width: 100%;
  height: 100vh;
  position: relative;
  // background: blue;
  .info-pack {
    position: fixed;
    width: 100%;
    padding: 10px 10px 0;
    background-image: linear-gradient(135deg, #1852a8 10%, #92ffc0 100%);
    opacity: 0.8;
    .back-container {
      text-align: right;
    }
  }
}
</style>
